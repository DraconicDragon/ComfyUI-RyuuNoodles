name: 📝 Generate Changelog

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["📌 Auto Tag from pyproject.toml"]
    types:
      - completed

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch full history including tags
          fetch-tags: true

      - name: Get previous and latest tags
        id: tags
        run: |
          tags=($(git tag --sort=-creatordate))
          latest_tag=${tags[0]}
          previous_tag=${tags[1]}
          echo "Latest tag: $latest_tag"
          echo "Previous tag: $previous_tag"
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT
          echo "previous_tag=$previous_tag" >> $GITHUB_OUTPUT

      - name: Exit if prerelease
        if: contains(steps.tags.outputs.latest_tag, '-')
        run: |
          echo "Pre-release tag detected (${ { steps.tags.outputs.latest_tag }}), skipping changelog."
          exit 0

      - name: Build Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          fromTag: ${{ steps.tags.outputs.previous_tag }}
          toTag: ${{ steps.tags.outputs.latest_tag }}
          mode: "COMMIT"
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}",
              "categories": [
                { "title": "## Feature", "labels": ["feat", "feature"] },
                { "title": "## Fix",     "labels": ["fix", "bug"]      },
                { "title": "## Other",   "labels": []                  }
              ],
              "label_extractor": [
                {
                  "pattern": "^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)",
                  "on_property": "title",
                  "target": "$1"
                }
              ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Append compare URL and save changelog to file
        run: |
          echo "${{ steps.changelog.outputs.changelog }}" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "[View changes on GitHub](https://github.com/${{ github.repository }}/compare/${{ steps.tags.outputs.previous_tag }}...${{ steps.tags.outputs.latest_tag }})" >> CHANGELOG.md

      # - name: Commit changelog
      #   run: |
      #     git config user.name "github-actions[bot]"
      #     git config user.email "github-actions[bot]@users.noreply.github.com"
      #     git add CHANGELOG.md
      #     git commit -m "chore: update CHANGELOG.md for ${{ steps.tags.outputs.latest_tag }}"
      #     git push
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release with changelog
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tags.outputs.latest_tag }}
          name: ${{ steps.tags.outputs.latest_tag }}
          body: |
            ${{ steps.changelog.outputs.changelog }}

            [View changes on GitHub](https://github.com/${{ github.repository }}/compare/${{ steps.tags.outputs.previous_tag }}...${{ steps.tags.outputs.latest_tag }})
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
